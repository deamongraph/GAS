/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GAS;

import java.io.InputStreamReader;
import static com.sun.org.apache.xalan.internal.xsltc.compiler.sym.EOF;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.text.html.HTML.Tag.P;

/**
 *
 * @author frangel
 */
public class MainForm extends javax.swing.JFrame {
 
  BufferedReader reader;   
  String[] Codigo_C;
  String lineaformateada;
 int indice=0;
 int medio=1;
 int els=0;
 int cont=0;
  PintaAlgoritmo p = new PintaAlgoritmo();
Data d = new Data();
    public  void agregarDato(String dato)
    {
      d.Datos.add(dato);
    } 
   
    public MainForm() {
            initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btm_Inicio = new javax.swing.JButton();
        btm_Entrada = new javax.swing.JButton();
        btm_Proceso = new javax.swing.JButton();
        btm_if = new javax.swing.JButton();
        btm_Sino = new javax.swing.JButton();
        btm_imprimir = new javax.swing.JButton();
        btm_GenerarDiagrama = new javax.swing.JButton();
        btm_limpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaTrabajo = new javax.swing.JTextArea();
        btm_Deshacer = new javax.swing.JButton();
        btm_Rehacer = new javax.swing.JButton();
        btm_fin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btm_generarcodigo = new javax.swing.JButton();
        btm_compilar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btm_FinSiNo = new javax.swing.JButton();
        btm_VerificacionSintactica = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuSuperior = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        btm_Inicio.setText("Inicio");
        btm_Inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_InicioActionPerformed(evt);
            }
        });

        btm_Entrada.setText("Entrada");
        btm_Entrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_EntradaActionPerformed(evt);
            }
        });

        btm_Proceso.setText("Proceso");
        btm_Proceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_ProcesoActionPerformed(evt);
            }
        });

        btm_if.setText("Si");
        btm_if.setPreferredSize(new java.awt.Dimension(69, 23));
        btm_if.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_ifActionPerformed(evt);
            }
        });

        btm_Sino.setText("Else");
        btm_Sino.setPreferredSize(new java.awt.Dimension(69, 23));
        btm_Sino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_SinoActionPerformed(evt);
            }
        });

        btm_imprimir.setText("Imprimir");
        btm_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_imprimirActionPerformed(evt);
            }
        });

        btm_GenerarDiagrama.setText("Generar Diagrama ");
        btm_GenerarDiagrama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_GenerarDiagramaActionPerformed(evt);
            }
        });

        btm_limpiar.setText("Limpiar ");
        btm_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_limpiarActionPerformed(evt);
            }
        });

        AreaTrabajo.setColumns(20);
        AreaTrabajo.setRows(5);
        jScrollPane1.setViewportView(AreaTrabajo);

        btm_Deshacer.setText("Deshacer");

        btm_Rehacer.setText("Rehacer");

        btm_fin.setText("Fin");
        btm_fin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_finActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione la operacion:");

        btm_generarcodigo.setText("Generar Codigo C");
        btm_generarcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_generarcodigoActionPerformed(evt);
            }
        });

        btm_compilar.setText("Compilar");
        btm_compilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_compilarActionPerformed(evt);
            }
        });

        jButton1.setText("Fin Si");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btm_FinSiNo.setText("Fin Else");
        btm_FinSiNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_FinSiNoActionPerformed(evt);
            }
        });

        btm_VerificacionSintactica.setText("Verificacion Sintactica");
        btm_VerificacionSintactica.setToolTipText("");
        btm_VerificacionSintactica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_VerificacionSintacticaActionPerformed(evt);
            }
        });

        MenuSuperior.setText("File");

        jMenuItem1.setText("Guardar Codigo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        MenuSuperior.add(jMenuItem1);

        jMenuBar1.add(MenuSuperior);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btm_if, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btm_Sino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btm_FinSiNo)))
                                .addComponent(btm_imprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btm_Proceso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btm_Entrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btm_Inicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btm_fin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btm_limpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btm_Deshacer)
                                .addGap(18, 18, 18)
                                .addComponent(btm_Rehacer)
                                .addGap(69, 69, 69))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btm_GenerarDiagrama)
                        .addGap(18, 18, 18)
                        .addComponent(btm_generarcodigo)
                        .addGap(26, 26, 26)
                        .addComponent(btm_VerificacionSintactica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btm_compilar)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btm_Inicio)
                        .addGap(18, 18, 18)
                        .addComponent(btm_Entrada)
                        .addGap(18, 18, 18)
                        .addComponent(btm_Proceso)
                        .addGap(18, 18, 18)
                        .addComponent(btm_imprimir)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btm_if, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btm_Sino, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(btm_FinSiNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(btm_fin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btm_limpiar)
                    .addComponent(btm_Deshacer)
                    .addComponent(btm_Rehacer))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btm_GenerarDiagrama)
                    .addComponent(btm_generarcodigo)
                    .addComponent(btm_compilar)
                    .addComponent(btm_VerificacionSintactica))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btm_EntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_EntradaActionPerformed
        String s = JOptionPane.showInputDialog("Digite un valor para su variable\n Ejemplo: X ");
    if(!s.matches("\\w+"))
        JOptionPane.showMessageDialog(rootPane, "La variable debe contener solo letras");
    else{  
     agregarDato(s);
     AreaTrabajo.append("Leer: "+d.Datos.get(indice)+"\n");
     indice++;
    }
    }//GEN-LAST:event_btm_EntradaActionPerformed

    private void btm_ProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_ProcesoActionPerformed
        String x = JOptionPane.showInputDialog("Digite la operacion a efectuar \n Ejemplo X=X+1 ");
         //faltan numeros negativos
         if(!x.matches("([\\w+][\\=])"
                 + "([\\-]?([\\d]+[.]?[\\d]*)*[\\w]*)+"
                 + "([\\+]?|[\\-]?|[\\*]?|[\\/]?|[\\%]?)?"
                 + "([\\-]?([\\d]+[.]?[\\d]*)*[\\w]*)+"))
        JOptionPane.showMessageDialog(rootPane, "La variable debe ser de la forma: X=n");
         else{
        agregarDato(x);   
        AreaTrabajo.append("Hacer: "+d.Datos.get(indice)+"\n");
        indice++;
         }
    }//GEN-LAST:event_btm_ProcesoActionPerformed

    private void btm_ifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_ifActionPerformed
      String z = JOptionPane.showInputDialog("Digite la condicion a cumplir \n X>0 ");    
     if(!z.matches("([\\d]+[.]?[\\d]*)*[\\w]*"
             + "([\\>]?|[\\<]?|[\\>=]?|[\\<=]?|[\\=]{2}|[\\!=]?"
                + ")([\\d]+[.]?[\\d]*)*[\\w]*"))
        JOptionPane.showMessageDialog(rootPane, "La variable debe ser de la forma: X>n ");
         else{
     agregarDato(z);  
    
          
     AreaTrabajo.append("Si: "+d.Datos.get(indice)+"\n");
     indice++; 
     }
    }//GEN-LAST:event_btm_ifActionPerformed

    private void btm_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_imprimirActionPerformed
     String u = JOptionPane.showInputDialog("Digite la variable que desea imprimir");
     ///  if(!u.matches("\\w+"))
     //   JOptionPane.showMessageDialog(rootPane, "La variable debe contener solo letras");
   // else{  
     agregarDato(u);
     AreaTrabajo.append("Imprimir: " +d.Datos.get(indice)+"\n");
     indice++;
   //    }
    }//GEN-LAST:event_btm_imprimirActionPerformed

    private void btm_InicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_InicioActionPerformed
       if(d.Datos.contains("INICIO"))
        JOptionPane.showMessageDialog(rootPane, "Solo se puede tener un INICIO");
     else{
     agregarDato("INICIO");
     AreaTrabajo.append(d.Datos.get(indice)+"\n");
     indice++;
     
     }
    }//GEN-LAST:event_btm_InicioActionPerformed

    private void btm_GenerarDiagramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_GenerarDiagramaActionPerformed
    
           // caso base inicio siempre en el medio  
        
        for(int e=0;e<27;e++)
            {
                p.agregarListaE(e,0);
                p.agregarListaS(e,0);
              }
            
        
          p.agregarNodo(medio, d.Datos.get(0));
          for(int i=1; i<d.Datos.size();i++)
          {
             // NODOS POR EL MEDIO
             if(!d.Datos.get(i).contains(">") && !"Else:".equals(d.Datos.get(i)) && !"FIN".equals(d.Datos.get(i)))
            {
              p.agregarListaE(i,medio);
              p.agregarListaS(i,medio+3);
                
                //normales
              medio = medio+3;              
              p.agregarNodo(medio, d.Datos.get(i));
            
              //IF
            }else
             if(d.Datos.get(i).contains(">")||d.Datos.get(i).contains("<")||d.Datos.get(i).contains("<=")||d.Datos.get(i).contains(">=")||d.Datos.get(i).contains("!="))
            {
              p.agregarListaE(i,medio);//desde donde
              
             medio = medio+3;
             p.agregarNodo(medio, d.Datos.get(i));
             p.agregarListaS(i,medio);//hasta donde
             els=medio;
          //ELSE
            }else
             
            if("Else:".equals(d.Datos.get(i)))
            {
            p.agregarListaE(i,els);//desde donde
            medio=medio-1;
            p.agregarNodo(medio,d.Datos.get(i)); 
            p.agregarListaS(i,medio);//hasta donde
            }             
          
            if("FIN".equals(d.Datos.get(i)))
            {
             p.agregarListaE(i,medio);//desde donde
             p.agregarNodo(25, d.Datos.get(i));//hasta donde
             p.agregarListaS(i,25);//hasta donde 
            } 
          }
       
        
         // p.listaE[0]=1;
      //   p.listaS[0]=5;
         
       
       
       
           p.inicializar();
          
          p.pack();
          p.show();
         
    }//GEN-LAST:event_btm_GenerarDiagramaActionPerformed

    private void btm_finActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_finActionPerformed
        if(d.Datos.contains("FIN") && !d.Datos.get(0).equals("INICIO"))
        JOptionPane.showMessageDialog(rootPane, "Solo se puede tener un FIN");
     else{         
       
            agregarDato("FIN");          
     AreaTrabajo.append(d.Datos.get(indice)+"\n");
     indice++;
        }
    }//GEN-LAST:event_btm_finActionPerformed

    private void btm_generarcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_generarcodigoActionPerformed
       String lineas;
       lineaformateada = " ";
       int i=0;
       try 
       {
          reader = new BufferedReader(new StringReader(AreaTrabajo.getText()));
          while ((lineas = reader.readLine()) != null) {
          Codigo_C= lineas.split(":");
         // if (Codigo_C[0].length() > 0) 
           //   System.out.println(Codigo_C);
          if (Codigo_C[0].contains("Leer"))
             lineaformateada+="int"+Codigo_C[1]+";";
          if (Codigo_C[0].contains("Hacer"))
             lineaformateada+="\n"+"\t"+Codigo_C[1]+";";
          
          if (Codigo_C[0].equals("Si"))
          {  
              lineaformateada+="\n"+"\t"+"if ("+Codigo_C[1]+"){"+"\n";
          }
            if (Codigo_C[0].equals("FinSi"))
          {
             lineaformateada+="\n"+"\t"+"}";
          }
          
          if (Codigo_C[0].equals("Else"))
          {
             lineaformateada+="\n"+"\t"+"else{";
          }
           if (Codigo_C[0].equals("FinElse"))
          {
             lineaformateada+="\n"+"\t"+"}";
          }
           
             if (Codigo_C[0].contains("Imprimir"))
             if(!Codigo_C[1].contains("'"))
             lineaformateada+="\n"+"\t"+"printf"+"("+"\"%d\","+Codigo_C[1]+");";
             else{
             lineaformateada+="\n"+"\t"+"printf"+"("+"\"%s\",\""+Codigo_C[1]+"\");";
             }
                  
          
        }

} catch(IOException e) {
  e.printStackTrace();
}

          AreaTrabajo.setText("#include <stdio.h> \n int main()"+"\n"+"{"+"\n"+"\t"+lineaformateada+"\n"+"\treturn 0;"+"\n"+"}");
       

     
    }//GEN-LAST:event_btm_generarcodigoActionPerformed

    private void btm_SinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_SinoActionPerformed
         // String z = JOptionPane.showInputDialog("Digite la condicion a cumplir \n X>0 ");
     agregarDato("Else:");          
     AreaTrabajo.append(d.Datos.get(indice)+"\n");
     indice++; 
    }//GEN-LAST:event_btm_SinoActionPerformed

    private void btm_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_limpiarActionPerformed
      AreaTrabajo.setText("");
      d.Datos.clear();
      
    }//GEN-LAST:event_btm_limpiarActionPerformed
private String executeCommand(String command) {
 
		StringBuffer output = new StringBuffer();
 
		Process p;
		try {
			p = Runtime.getRuntime().exec(command);
			p.waitFor();
			BufferedReader reader = 
                            new BufferedReader(new InputStreamReader(p.getInputStream()));
 
                        String line = "";			
			while ((line = reader.readLine())!= null) {
				output.append(line + "\n");
			}
 
		} catch (Exception e) {
			e.printStackTrace();
		}
 
		return output.toString();
 
	}
    
    
    private void btm_compilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_compilarActionPerformed
     	  //generar codigo.C 
        try 
     {
        BufferedWriter writer = new BufferedWriter(new FileWriter("Archivo.c"));
        writer.write(AreaTrabajo.getText());
        writer.newLine();
        writer.close();
     }
     
     catch(IOException ex)
     {
         
     }
    
        
        
        
        MainForm obj = new MainForm();
 
		String var = "Archivo.c";
 
	       String command = "gcc "+var;
 
	      String output = obj.executeCommand(command);
		//System.out.println(output);
        
              String command2 = "./a.out";
 
	      String output2 = obj.executeCommand(command2);
		JOptionPane.showMessageDialog(rootPane, output2);
        
    }//GEN-LAST:event_btm_compilarActionPerformed

    private void btm_FinSiNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_FinSiNoActionPerformed
  // TODO add your handling code here:
        agregarDato("FinElse:");          
        AreaTrabajo.append(d.Datos.get(indice)+"\n");
        indice++;
         
    }//GEN-LAST:event_btm_FinSiNoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        agregarDato("FinSi:");
        AreaTrabajo.append(d.Datos.get(indice) + "\n");
        indice++;

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try 
     {
        BufferedWriter writer = new BufferedWriter(new FileWriter("Archivo.c"));
        writer.write(AreaTrabajo.getText());
        writer.newLine();
        writer.close();
     }
     
     catch(IOException ex)
     {
         
     }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btm_VerificacionSintacticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_VerificacionSintacticaActionPerformed
           try 
     {
        BufferedWriter writer = new BufferedWriter(new FileWriter("sintax.txt"));
        writer.write(AreaTrabajo.getText());
        writer.newLine();
        writer.close();
     }
     
     catch(IOException ex)
     {
         
     }
          MainForm obj = new MainForm();
        String command = "./programa codigo.txt";
 
	      String output = obj.executeCommand(command);
		JOptionPane.showMessageDialog(rootPane, output);    
     
    
    }//GEN-LAST:event_btm_VerificacionSintacticaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaTrabajo;
    private javax.swing.JMenu MenuSuperior;
    private javax.swing.JButton btm_Deshacer;
    private javax.swing.JButton btm_Entrada;
    private javax.swing.JButton btm_FinSiNo;
    private javax.swing.JButton btm_GenerarDiagrama;
    private javax.swing.JButton btm_Inicio;
    private javax.swing.JButton btm_Proceso;
    private javax.swing.JButton btm_Rehacer;
    private javax.swing.JButton btm_Sino;
    private javax.swing.JButton btm_VerificacionSintactica;
    private javax.swing.JButton btm_compilar;
    private javax.swing.JButton btm_fin;
    private javax.swing.JButton btm_generarcodigo;
    private javax.swing.JButton btm_if;
    private javax.swing.JButton btm_imprimir;
    private javax.swing.JButton btm_limpiar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
